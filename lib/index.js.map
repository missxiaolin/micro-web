{"version":3,"file":"index.js","sources":["../src/const/subApps.js","../src/const/mainLifeCycle.js","../src/utils/index.js","../src/utils/fetchResource.js","../src/sandBox/performScript.js","../src/sandBox/proxySandbox.js","../src/sandBox/index.js","../src/loader/index.js","../src/lifeCycle/index.js","../src/router/routerHandle.js","../src/router/rewriteRouter.js","../src/customevent/index.js","../src/loader/prefetch.js","../src/start.js","../src/store/index.js"],"sourcesContent":["let list = []\n\nexport const getList = () => list\n\nexport const setList = appList => list = appList\n","let lifecycle = {}\n\nexport const getMainLifecycle = () => lifecycle\n\nexport const setMainLifecycle = data => lifecycle = data\n","import { getList } from '../const/subApps'\n\n// 给当前的路由跳转打补丁\nexport const patchRouter = (globalEvent, eventName) => {\n    return function () {\n        const e = new Event(eventName)\n        globalEvent.apply(this, arguments)\n        window.dispatchEvent(e)\n    }\n}\n\n/**\n * @returns \n */\nexport const currentApp = () => {\n    const currentUrl = window.location.pathname\n\n    return filterApp('activeRule', currentUrl)\n}\n\n/**\n * @param {*} router \n * @returns \n */\nexport const findAppByRoute = (router) => {\n    return filterApp('activeRule', router)\n}\n\n/**\n * @param {*} key \n * @param {*} value \n * @returns \n */\nexport const filterApp = (key, value) => {\n    const currentApp = getList().filter(item => item[key] === value)\n\n    return currentApp && currentApp.length ? currentApp[0] : {}\n}\n\n// 子应用是否做了切换\nexport const isTurnChild = () => {\n    const { pathname } = window.location\n\n    let prefix = pathname.match(/(\\/\\w+)/)\n    if (prefix) {\n        prefix = prefix[0]\n    }\n    window.__ORIGIN_APP__ = window.__CURRENT_SUB_APP__\n    if (window.__CURRENT_SUB_APP__ === prefix) {\n        return false\n    }\n    const currentApp = window.location.pathname.match(/(\\/\\w+)/)\n    if (!currentApp) {\n        return\n    }\n\n    window.__CURRENT_SUB_APP__ = currentApp[0]\n    return true\n}\n","export const fetchResource = url => fetch(url).then(async res => await res.text())\n","\n\n/**\n * js 导入\n * @param {*} script \n * @param {*} appName \n * @param {*} global\n * @returns \n */\nexport const performScriptForEval = (script, appName, global) => {\n  // library window.appName\n  window.proxy = global\n  const scriptText = `\n    ((window) => {\n      ${script}\n      return window['${appName}'] \n    })(window.proxy)\n  `\n  return eval(scriptText)// app module mount\n}\n\n/**\n * js 导入\n * @param {*} script \n * @param {*} appName \n * @param {*} global\n * @returns \n */\nexport const performScriptForFunction = (script, appName, global) => {\n  window.proxy = global\n\n  const scriptText = `\n    return ((window) => {\n      ${script}\n      return window['${appName}']\n    })(window.proxy)\n  `\n  return new Function(scriptText)()\n}\n","// 代理沙箱\n\nlet defaultValue = {} // 子应用的沙箱容器\n\nexport default class ProxySandbox {\n    constructor() {\n        this.proxy = null;\n\n        this.active()\n    }\n    // 沙箱激活\n    active() {\n        // 子应用需要设置属性，\n        this.proxy = new Proxy(window, {\n            get(target, key) {\n                if (typeof target[key] === 'function') {\n                    return target[key].bind(target)\n                }\n                return defaultValue[key] || target[key]\n            },\n            set(target, key, value) {\n                defaultValue[key] = value\n                return true\n            }\n        })\n\n    }\n\n    // 沙箱销毁\n    inactive() {\n        defaultValue = {}\n    }\n}\n","import { performScriptForEval, performScriptForFunction } from './performScript'\nimport SnapShotSandbox from './snapShotSandbox'\nimport ProxySandbox from './proxySandbox'\n\n\nconst isCheckLifeCycle = lifecycle => lifecycle && lifecycle.bootstrap && lifecycle.mount && lifecycle.unmount\n\n\n// 子应用生命周期处理， 环境变量设置\nexport const sandBox = (app, script) => {\n    const proxy = new ProxySandbox()\n\n    if (!app.proxy) {\n        app.proxy = proxy\n    }\n    \n    // 设置环境变量\n    window.__MICRO_WEB__ = true\n\n    // 2. 运行js文件\n    const lifecycle = performScriptForEval(script, app.name, app.proxy.proxy)\n\n    // 生命周期内容，挂载到app上\n    if (isCheckLifeCycle(lifecycle)) {\n        app.bootstrap = lifecycle.bootstrap\n        app.mount = lifecycle.mount\n        app.unmount = lifecycle.unmount\n    }\n}\n","import { fetchResource } from '../utils/fetchResource'\nimport { sandBox } from '../sandBox/index'\n\nconst cache = {} // 根据子应用应用名称\n\n/**\n * 加载html方法\n * @param {*} app \n */\nexport const loadHtml = async (app) => {\n    // 子应用需要显示的在哪里\n    let container = app.container\n\n\n    // 子应用的入口\n    let entry = app.entry\n\n    const [dom, scripts] = await parseHtml(entry, app.name)\n    const ct = document.querySelector(container)\n\n    if (!ct) {\n        throw new Error('容器不存在')\n    }\n\n    ct.innerHTML = dom\n\n    scripts.forEach(item => {\n        sandBox(app, item)\n    })\n\n    return app\n}\n\n/**\n * @param {*} entry \n * @param {*} name \n * @returns \n */\nexport const parseHtml = async (entry, name) => {\n    if (cache[name]) {\n        return cache[name]\n    }\n    const html = await fetchResource(entry)\n\n    let allScript = []\n    const div = document.createElement('div')\n    div.innerHTML = html\n\n    const [dom, scriptUrl, script] = await getResources(div, entry)\n\n    const fetchedScripts = await Promise.all(scriptUrl.map(async item => fetchResource(item)))\n\n    allScript = script.concat(fetchedScripts)\n    cache[name] = [dom, allScript]\n\n    return [dom, allScript]\n}\n\n/**\n * @param {*} root \n * @param {*} entry \n * @returns \n */\nexport const getResources = async (root, entry) => {\n    const scriptUrl = [] // js 链接  src  href\n    const script = [] // 写在script中的js脚本内容\n    const dom = root.outerHTML\n\n    // 深度解析\n    function deepParse(element) {\n        const children = element.children\n        const parent = element.parent;\n\n        // 处理位于 script 中的内容\n        if (element.nodeName.toLowerCase() === 'script') {\n            const src = element.getAttribute('src');\n            if (!src) {\n                script.push(element.outerHTML)\n            } else {\n                if (src.startsWith('http')) {\n                    scriptUrl.push(src)\n                } else {\n                    scriptUrl.push(`http:${entry}/${src}`)\n                }\n            }\n\n            if (parent) {\n                parent.replaceChild(document.createComment('此 js 文件已经被微前端替换'), element)\n            }\n        }\n\n        // link 也会有js的内容\n        if (element.nodeName.toLowerCase() === 'link') {\n            const href = element.getAttribute('href');\n\n            if (href.endsWith('.js')) {\n                if (href.startsWith('http')) {\n                    scriptUrl.push(href)\n                } else {\n                    scriptUrl.push(`http:${entry}/${href}`)\n                }\n            }\n        }\n\n        for (let i = 0; i < children.length; i++) {\n            deepParse(children[i])\n        }\n    }\n\n    deepParse(root)\n\n    return [dom, scriptUrl, script]\n}\n","import { findAppByRoute } from '../utils/index'\nimport { getMainLifecycle } from '../const/mainLifeCycle'\nimport { loadHtml } from '../loader/index'\n\nexport const lifecycle = async () => {\n    // 获取到上一个子应用\n    const prevApp = findAppByRoute(window.__ORIGIN_APP__)\n\n    // 获取要跳转的子应用，执行对应的生命周期\n    const nextApp = findAppByRoute(window.__CURRENT_SUB_APP__)\n\n    if (!nextApp) {\n        return\n    }    \n    if (prevApp && prevApp.unmount) {\n        if (prevApp.proxy) {\n            prevApp.proxy.inactive() // 将沙箱销毁\n        }\n        await destroyed(prevApp)\n    }\n    const app = await beforeLoad(nextApp)\n\n    // app && app.beforeLoad && app.beforeLoad()\n\n    await mounted(app)\n}\n\n/**\n * 加载时候执行\n * @param {*} app \n * @returns \n */\nexport const beforeLoad = async (app) => {\n    await runMainLifeCycle('beforeLoad')\n    app && app.bootstrap && app.bootstrap(app)\n\n    const subApp = await loadHtml(app) // 获取子应用内容\n\n    subApp && subApp.beforeLoad && subApp.beforeLoad()\n\n    return subApp\n}\n\n/**\n * 渲染完成执行\n * @param {*} app \n */\nexport const mounted = async (app) => {\n    app && app.mount && app.mount(app)\n    await runMainLifeCycle('mounted')\n}\n\n/**\n * 卸载时执行\n * @param {*} app \n */\nexport const destroyed = async (app) => {\n    app && app.unmount && app.unmount(app)\n    // 对应的执行以下主应用的生命周期\n    await runMainLifeCycle('destroyed')\n}\n\n/**\n * 执行生命周期\n * @param {*} type \n */\nexport const runMainLifeCycle = async (type) => {\n    const mainlife = getMainLifecycle()\n    \n    await Promise.all(mainlife[type].map(async item => await item()))\n}\n","import { isTurnChild } from '../utils/index'\nimport { lifecycle } from '../lifeCycle/index'\n\n\nexport const turnApp = async () => {\n    if (isTurnChild()) {\n        // 微前端的生命周期执行\n        await lifecycle()\n    }\n}\n","import { patchRouter } from '../utils/index'\nimport { turnApp } from '../router/routerHandle'\n\n// 重写window 路由跳转\nexport const rewriteRouter = () => {\n    window.history.pushState = patchRouter(window.history.pushState, 'micro_push')\n    window.history.replaceState = patchRouter(window.history.replaceState, 'micro_replace')\n\n    window.addEventListener('micro_push', turnApp)\n    window.addEventListener('micro_replace', turnApp)\n\n    // 监听返回事件\n    window.onpopstate = async function () {\n        await turnApp()\n    }\n}\n\n","export class Custom {\n    // 事件监听\n    on(name, cb) {\n        window.addEventListener(name, (e) => {\n            cb(e.detail)\n        })\n    }\n    // 事件触发\n    emit(name, data) {\n        const event = new CustomEvent(name, {\n            detail: data\n        })\n        window.dispatchEvent(event)\n    }\n}\n","import { getList } from '../const/subApps';\nimport { parseHtml } from './index';\n\nexport const prefetch = async () => {\n    // 1. 获取到所有子应用列表 - 不包括当前正在显示的\n    const list = getList().filter(item => !window.location.pathname.startsWith(item.activeRule))\n\n    // 2. 预加载剩下的所有子应用\n    await Promise.all(list.map(async item => await parseHtml(item.entry, item.name)))\n}","import { getList, setList } from './const/subApps'\nimport { setMainLifecycle } from './const/mainLifeCycle'\nimport { rewriteRouter } from './router/rewriteRouter'\nimport { currentApp } from './utils/index'\nimport { Custom } from './customevent/index'\nimport { prefetch } from './loader/prefetch'\n\nconst custom = new Custom()\n\nwindow.microCustom = custom\n\n// 实现路由拦截\nrewriteRouter()\n\n/**\n * @param {*} appList 应用\n * @param {*} lifeCycle 生命周期\n */\nexport const registerMicroApps = (appList, lifeCycle) => {\n    setList(appList)\n    setMainLifecycle(lifeCycle)\n}\n\n// 启动微前端框架\nexport const start = () => {\n    // 验证子应用列表是否为空\n    const apps = getList()\n    if (!apps.length) {\n        throw Error('子应用列表为空，请正确注册')\n    }\n    // 子应用， 查找符合当前子应用内容\n    const app = currentApp()\n    if (app) {\n        const { pathname, hash } = window.location\n        const url = pathname + hash\n\n        // 防止应用多次加载问题\n        window.__CURRENT_SUB_APP__ = app.activeRule\n\n        window.history.pushState('', '', url)\n    }\n    // 预加载\n    prefetch()\n}","export const createStore = (initData = {}) => (() => {\n    let store = initData\n    const observers = [] // 管理所有的订阅者，依赖\n\n    // 获取store\n    const getStore = () => store\n\n    // 更新store\n    const update = (value) => {\n        if (value !== store) {\n            // 执行store的操作\n            const oldValue = store\n            // 将store更新\n            store = value\n            // 通知所有的订阅者，监听store的变化\n            observers.forEach(async item => await item(store, oldValue))\n        }\n    }\n    // 添加订阅者\n    const subscribe = (fn) => {\n        observers.push(fn)\n    }\n\n    return {\n        getStore,\n        update,\n        subscribe,\n    }\n})()\n"],"names":["list","getList","setList","appList","lifecycle","getMainLifecycle","setMainLifecycle","data","patchRouter","globalEvent","eventName","e","Event","apply","this","arguments","window","dispatchEvent","currentApp","currentUrl","location","pathname","filterApp","findAppByRoute","router","key","value","filter","item","length","isTurnChild","prefix","match","__ORIGIN_APP__","__CURRENT_SUB_APP__","fetchResource","url","fetch","then","async","res","text","performScriptForEval","script","appName","global","proxy","scriptText","eval","defaultValue","ProxySandbox","constructor","active","Proxy","get","target","bind","set","inactive","isCheckLifeCycle","bootstrap","mount","unmount","sandBox","app","__MICRO_WEB__","name","cache","loadHtml","container","entry","dom","scripts","parseHtml","ct","document","querySelector","Error","innerHTML","forEach","html","allScript","div","createElement","scriptUrl","getResources","fetchedScripts","Promise","all","map","concat","root","outerHTML","deepParse","element","children","parent","nodeName","toLowerCase","src","getAttribute","startsWith","push","replaceChild","createComment","href","endsWith","i","prevApp","nextApp","destroyed","beforeLoad","mounted","runMainLifeCycle","subApp","mainlife","type","turnApp","rewriteRouter","history","pushState","replaceState","addEventListener","onpopstate","Custom","on","cb","detail","emit","event","CustomEvent","prefetch","activeRule","custom","microCustom","registerMicroApps","lifeCycle","start","hash","createStore","initData","store","observers","getStore","update","oldValue","subscribe","fn"],"mappings":"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"}